msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-11-30 23:19+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: Droonga tutorial\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: Droonga チュートリアル\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## Real-time search"
msgstr ""

msgid "Droonga supports streaming-style real-time search."
msgstr ""

msgid "### Update configurations of the Droonga engine"
msgstr ""

msgid "Update your fluentd.conf and catalog.jsons, like:"
msgstr ""

msgid "fluentd.conf:"
msgstr ""

msgid ""
"      <source>\n"
"        type forward\n"
"        port 24224\n"
"      </source>\n"
"      <match starbucks.message>\n"
"        name localhost:24224/starbucks\n"
"        type droonga\n"
"      </match>\n"
"    + <match droonga.message>\n"
"    +   name localhost:24224/droonga\n"
"    +   type droonga\n"
"    + </match>\n"
"      <match output.message>\n"
"        type stdout\n"
"      </match>"
msgstr ""

msgid "catalog.json:"
msgstr ""

msgid ""
"      {\n"
"        \"effective_date\": \"2013-09-01T00:00:00Z\",\n"
"        \"zones\": [\n"
"    +     \"localhost:24224/droonga\",\n"
"          \"localhost:24224/starbucks\"\n"
"        ],\n"
"        \"farms\": {\n"
"    +     \"localhost:24224/droonga\": {\n"
"    +       \"device\": \".\",\n"
"    +       \"capacity\": 10\n"
"    +     },\n"
"          \"localhost:24224/starbucks\": {\n"
"            \"device\": \".\",\n"
"            \"capacity\": 10\n"
"          }\n"
"        },\n"
"        \"datasets\": {\n"
"    +     \"Watch\": {\n"
"    +       \"workers\": 2,\n"
"    +       \"plugins\": [\"search\", \"groonga\", \"add\", \"watch\"],\n"
"    +       \"number_of_replicas\": 1,\n"
"    +       \"number_of_partitions\": 1,\n"
"    +       \"partition_key\": \"_key\",\n"
"    +       \"date_range\": \"infinity\",\n"
"    +       \"ring\": {\n"
"    +         \"localhost:23041\": {\n"
"    +           \"weight\": 50,\n"
"    +           \"partitions\": {\n"
"    +             \"2013-09-01\": [\n"
"    +               \"localhost:24224/droonga.watch\"\n"
"    +             ]\n"
"    +           }\n"
"    +         }\n"
"    +       }\n"
"    +     },\n"
"          \"Starbucks\": {\n"
"            \"workers\": 0,\n"
"            \"plugins\": [\"search\", \"groonga\", \"add\"],\n"
"            \"number_of_replicas\": 2,\n"
"            \"number_of_partitions\": 2,\n"
"            \"partition_key\": \"_key\",\n"
"            \"date_range\": \"infinity\",\n"
"            \"ring\": {\n"
"              \"localhost:23041\": {\n"
"                \"weight\": 50,\n"
"                \"partitions\": {\n"
"                  \"2013-09-01\": [\n"
"                    \"localhost:24224/starbucks.000\",\n"
"                    \"localhost:24224/starbucks.001\"\n"
"                  ]\n"
"                }\n"
"              },\n"
"              \"localhost:23042\": {\n"
"                \"weight\": 50,\n"
"                \"partitions\": {\n"
"                  \"2013-09-01\": [\n"
"                    \"localhost:24224/starbucks.002\",\n"
"                    \"localhost:24224/starbucks.003\"\n"
"                  ]\n"
"                }\n"
"              }\n"
"            }\n"
"          }\n"
"        },\n"
"        \"options\": {\n"
"          \"plugins\": []\n"
"        }\n"
"      }"
msgstr ""

msgid "### Add a streaming API to the protocol adapter"
msgstr ""

msgid "Add a streaming API to the protocol adapter, like;"
msgstr ""

msgid "application.js:"
msgstr ""

msgid ""
"    var express = require('express'),\n"
"        droonga = require('express-droonga');"
msgstr ""

msgid ""
"    var application = express();\n"
"    var server = require('http').createServer(application);\n"
"    server.listen(3000); // the port to communicate with clients"
msgstr ""

msgid ""
"    //============== INSERTED ==============\n"
"    var streaming = {\n"
"      'streaming': new droonga.command.HTTPStreaming({\n"
"        dataset: 'Watch',\n"
"        path: '/watch',\n"
"        method: 'GET',\n"
"        subscription: 'watch.subscribe',\n"
"        unsubscription: 'watch.unsubscribe',\n"
"        notification: 'watch.notification',\n"
"        createSubscription: function(request) {\n"
"          return {\n"
"            condition: request.query.query\n"
"          };\n"
"        }\n"
"      })\n"
"    };\n"
"    //============= /INSERTED =============="
msgstr ""

msgid ""
"    application.droonga({\n"
"      prefix: '/droonga',\n"
"      tag: 'starbucks',\n"
"      defaultDataset: 'Starbucks',\n"
"      server: server, // this is required to initialize Socket.IO API!\n"
"      plugins: [\n"
"        droonga.API_REST,\n"
"        droonga.API_SOCKET_IO,\n"
"        droonga.API_GROONGA,\n"
"        droonga.API_DROONGA\n"
"    //============== INSERTED ==============\n"
"        ,streaming\n"
"    //============= /INSERTED ==============\n"
"      ]\n"
"    });"
msgstr ""

msgid ""
"    application.get('/', function(req, res) {\n"
"      res.sendfile(__dirname + '/index.html');\n"
"    });"
msgstr ""

msgid "### Prepare feeds"
msgstr ""

msgid "Prepare \"feed\"s like:"
msgstr ""

msgid "feeds.jsons:"
msgstr ""

msgid ""
"    {\"id\":\"feed:0\",\"dataset\":\"Watch\",\"type\":\"watch.feed\",\"body\":{\"targets\":{\"k"
"ey\":\"old place 0\"}}}\n"
"    {\"id\":\"feed:1\",\"dataset\":\"Watch\",\"type\":\"watch.feed\",\"body\":{\"targets\":{\"k"
"ey\":\"new place 0\"}}}\n"
"    {\"id\":\"feed:2\",\"dataset\":\"Watch\",\"type\":\"watch.feed\",\"body\":{\"targets\":{\"k"
"ey\":\"old place 1\"}}}\n"
"    {\"id\":\"feed:3\",\"dataset\":\"Watch\",\"type\":\"watch.feed\",\"body\":{\"targets\":{\"k"
"ey\":\"new place 1\"}}}\n"
"    {\"id\":\"feed:4\",\"dataset\":\"Watch\",\"type\":\"watch.feed\",\"body\":{\"targets\":{\"k"
"ey\":\"old place 2\"}}}\n"
"    {\"id\":\"feed:5\",\"dataset\":\"Watch\",\"type\":\"watch.feed\",\"body\":{\"targets\":{\"k"
"ey\":\"new place 2\"}}}"
msgstr ""

msgid "### Try it!"
msgstr ""

msgid "At first, restart servers in each console."
msgstr ""

msgid "The engine:"
msgstr ""

msgid "    # fluentd --config fluentd.conf"
msgstr ""

msgid "The protocol adapter:"
msgstr ""

msgid "    # nodejs application.js"
msgstr ""

msgid "Next, connect to the streaming API via curl:"
msgstr ""

msgid "    # curl \"http://localhost:3000/droonga/watch?query=new\""
msgstr ""

msgid "Then the client starts to receive streamed results."
msgstr ""

msgid "Next, open a new console and send \"feed\"s to the engine like:"
msgstr ""

msgid "    # fluent-cat droonga.message < feeds.jsons"
msgstr ""

msgid ""
"Then the client receives three results \"new place 0\", \"new place 1\", and \"new "
"place 2\" like:"
msgstr ""

msgid ""
"    {\"targets\":{\"key\":\"new place 0\"}}\n"
"    {\"targets\":{\"key\":\"new place 1\"}}\n"
"    {\"targets\":{\"key\":\"new place 2\"}}"
msgstr ""

msgid ""
"They are search results for the query \"new\", given as a query parameter of the"
" streaming API."
msgstr ""

msgid "Results can be appear in different order, like:"
msgstr ""

msgid ""
"    {\"targets\":{\"key\":\"new place 1\"}}\n"
"    {\"targets\":{\"key\":\"new place 0\"}}\n"
"    {\"targets\":{\"key\":\"new place 2\"}}"
msgstr ""

msgid "because \"feed\"s are processed in multiple workers asynchronously."
msgstr ""
