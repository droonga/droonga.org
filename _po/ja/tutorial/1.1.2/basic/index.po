msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-11-30 23:19+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Droonga tutorial: Basic usage of low-layer commands\"\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: \"Droonga チュートリアル: 低レイヤのコマンドの基本的な使い方\"\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## The goal of this tutorial"
msgstr "## チュートリアルのゴール"

msgid ""
"Learning steps to setup a Droonga based search system by yourself, with low-la"
"yer commands of Droonga."
msgstr "Droonga の低レイヤのコマンドを用いて、Droonga を使った検索システムを自分で構築できるようになる。"

msgid "## Precondition"
msgstr "## 前提条件"

msgid ""
"* You must have basic knowledge and experiences to setup and operate an [Ubunt"
"u][] or [CentOS][] Server.\n"
"* You must have basic knowledge and experiences to develop applications based "
"on the [Ruby][] and the [Node.js][]."
msgstr ""
"* [Ubuntu][] または [CentOS][] の Server を自分でセットアップしたり、基本的な操作ができること\n"
"* [Ruby][] と [Node.js][] の基本的な知識があること"

msgid "## Abstract"
msgstr "## 概要"

msgid "### What is the Droonga?"
msgstr "### Droonga とは"

msgid ""
"It is a data processing engine based on a distributed architecture, named afte"
"r the terms \"distributed-Groonga\"."
msgstr "分散データ処理エンジンです。 \"distributed-groonga\" に由来します。"

msgid ""
"The Droonga is built on some components which are made as separated packages. "
"You can develop various data processing systems (for example, a fulltext searc"
"h engine) with high scalability from a distributed architecture, with those pa"
"ckages."
msgstr ""
"Droonga は複数のコンポーネントから構成されています。ユーザは、これらのパッケージを組み合わせて利用することで、全文検索をはじめとするスケーラブルな分"
"散データ処理システムを構築することができます。"

msgid "### Components of the Droonga"
msgstr "### Droonga を構成するコンポーネント"

msgid "#### Droonga Engine"
msgstr ""

msgid ""
"The component \"Droonga Engine\" is the main part to process data with a distrib"
"uted architecture. It is triggered by requests and processes various data."
msgstr "Droonga Engine は Droonga における分散データ処理の要となるコンポーネントです。リクエストに基いて実際のデータ処理を行います。"

msgid ""
"This component is developed and released as the [droonga-engine][].\n"
"The protocol is compatible to [Fluentd]."
msgstr ""
"このコンポーネントは[droonga-engine][]という名前で開発およびリリースされています。\n"
"通信に使用するプロトコルは[Fluentd]と互換性があります。"

msgid ""
"It internally uses [Groonga][] as its search engine.\n"
"Groonga is an open source, fulltext search engine, including a column-store fe"
"ature."
msgstr "[droonga-engine][] は検索エンジンとして、オープンソースのカラムストア機能付き全文検索エンジン [Groonga][] を使用しています。"

msgid "#### Protocol Adapter"
msgstr ""

msgid ""
"The component \"Protocol Adapter\" provides ability for clients to communicate w"
"ith a Droonga engine, using various protocols."
msgstr "Protocol Adapter は、Droonga を様々なプロトコルで利用できるようにするためのコンポーネントです。"

msgid ""
"The only one available protocol of a Droonga engine is the fluentd protocol.\n"
"Instead, protocol adapters translate it to other common protocols (like HTTP, "
"Socket.OP, etc.) between the Droonga Engine and clients."
msgstr ""
"Droonga Engine自体は通信プロトコルとしてfluentdプロトコルにのみ対応しています。\n"
"その代わりに、Protocol AdapterがDroonga Engineとクライアントの間に立って、fluentdプロトコルと他の一般的なプロトコル（H"
"TTP、Socket.IOなど）とを翻訳することになります。"

msgid ""
"Currently, there is an implementation for the HTTP: [droonga-http-server][], a"
" [Node.js][] module package.\n"
"In other words, the droonga-http-server is one of Droonga Progocol Adapters, a"
"nd it's a \"Droonga HTTP Protocol Adapter\"."
msgstr ""
"現在の所、HTTP用の実装として、[Node.js][]用モジュールパッケージの[droonga-http-server][]が存在しています。\n"
"言い直すと、droonga-http-serverはDroonga Protocol Adapterの一実装で、言わば「Droonga HTTP Proto"
"col Adapter」であるという事です。"

msgid "## Abstract of the system described in this tutorial"
msgstr "## チュートリアルでつくるシステムの全体像"

msgid "This tutorial describes steps to build a system like following:"
msgstr "チュートリアルでは、以下の様な構成のシステムを構築します。"

msgid ""
"    +-------------+              +------------------+             +-----------"
"-----+\n"
"    | Web Browser |  <-------->  | Protocol Adapter |  <------->  | Droonga En"
"gine |\n"
"    +-------------+   HTTP       +------------------+   Fluent    +-----------"
"-----+\n"
"                                 w/droonga-http        protocol   w/droonga-en"
"gine\n"
"                                           -server"
msgstr ""

msgid ""
"                                 \\--------------------------------------------"
"------/\n"
"                                       This tutorial describes about this part"
"."
msgstr ""
"                                 \\--------------------------------------------"
"------/\n"
"                                       この部分を構築します"

msgid ""
"User agents (ex. a Web browser) send search requests to a protocol adapter. Th"
"e adapter receives them, and sends internal (translated) search requests to a "
"Droonga engine. The engine processes them actually. Search results are sent fr"
"om the engine to the protocol adapter, and finally delivered to the user agent"
"s."
msgstr ""
"ユーザは Protocol Adapter に、Web ブラウザなどを用いて接続します。Protocol Adapter は Droonga Engine "
"へリクエストを送信します。実際の検索処理は Droonga Engine が行います。検索結果は、Droonga Engine から Protocol Ad"
"apter に渡され、最終的にユーザに返ります。"

msgid ""
"For example, let's try to build a database system to find [Starbucks stores in"
" New York](http://geocommons.com/overlays/430038)."
msgstr ""
"例として、[ニューヨークにあるスターバックスの店舗](http://geocommons.com/overlays/430038)を検索できるデータベースシ"
"ステムを作成することにします。"

msgid "## Prepare an environment for experiments"
msgstr "## 実験用のマシンを用意する"

msgid ""
"Prepare a computer at first. This tutorial describes steps to develop a search"
" service based on the Droonga, on an existing computer.\n"
"Following instructions are basically written for a successfully prepared virtu"
"al machine of the `Ubuntu 14.04 x64`, `CentOS 7 x64`, or or `CentOS 6.5 x64` o"
"n the service [DigitalOcean](https://www.digitalocean.com/), with an available"
" console."
msgstr ""
"まずコンピュータを調達しましょう。このチュートリアルでは、既存のコンピュータにDroongaによる検索システムを構築する手順を解説します。\n"
"以降の説明は基本的に、[DigitalOcean](https://www.digitalocean.com/)で `Ubuntu 14.04 x64`、`"
"CentOS 6.5 x64`、 または `CentOS 7 x64` の仮想マシンのセットアップを完了し、コンソールにアクセスできる状態になった後を前提と"
"して進めます。"

msgid ""
"NOTE: Make sure to use instances with >= 2GB memory equipped, at least during "
"installation of required packages for Droonga. Otherwise, you possibly experie"
"nce a strange build error."
msgstr ""
"注意：Droongaが必要とするパッケージをインストールする前に、マシンが2GB以上のメモリを備えていることを確認して下さい。メモリが不足していると、パッケ"
"ージのインストール中にネイティブ拡張のビルドに失敗する場合があります。"

msgid "Assume that the host is `192.168.100.50`."
msgstr "ホストが `192.168.100.50` だと仮定します。"

msgid "## Install Droonga engine"
msgstr "### Droonga Engineをインストールする"

msgid ""
"The part \"Droonga engine\" stores the database and provides the search feature "
"actually.\n"
"In this section we install a droonga-engine and load searchable data to the da"
"tabase."
msgstr ""
"Droonga Engine は、データベースを保持し、実際の検索を担当する部分です。\n"
"このセクションでは、 droonga-engine をインストールし、検索対象となるデータを準備します。"

msgid "### Install `droonga-engine`"
msgstr "### `droonga-engine`をインストールする"

msgid "Download the installation script and run it by `bash` as the root user:"
msgstr "インストールスクリプトをダウンロードし、root権限で`bash`で実行して下さい:"

msgid ""
"~~~\n"
"# curl https://raw.githubusercontent.com/droonga/droonga-engine/master/install"
".sh | \\\n"
"    bash\n"
"...\n"
"Installing droonga-engine from RubyGems...\n"
"...\n"
"Preparing the user...\n"
"...\n"
"Setting up the configuration directory...\n"
"This node is configured with a hostname XXXXXXXX."
msgstr ""

msgid ""
"Registering droonga-engine as a service...\n"
"...\n"
"Successfully installed droonga-engine.\n"
"~~~"
msgstr ""

msgid "### Prepare configuration files to start `droonga-engine`"
msgstr "### `droonga-engine`を起動するための設定ファイルを用意する"

msgid ""
"All configuration files and physical databases are placed under a `droonga` di"
"rectory in the home directory of the service user `droonga-engine`:"
msgstr ""
"すべての設定ファイルと物理的なデータベースは、`droonga-engine`サービス用のユーザのホームディレクトリ内にある`droonga`ディレクトリの"
"下に置かれます:"

msgid "    $ cd ~droonga-engine/droonga"
msgstr ""

msgid ""
"Then, put (overwrite) a configuration file `catalog.json` like following, into"
" the directory:"
msgstr "では、以下の内容で設定ファイル `catalog.json` を上書きしましょう:"

msgid "catalog.json:"
msgstr ""

msgid ""
"    {\n"
"      \"version\": 2,\n"
"      \"effectiveDate\": \"2013-09-01T00:00:00Z\",\n"
"      \"datasets\": {\n"
"        \"Default\": {\n"
"          \"nWorkers\": 4,\n"
"          \"plugins\": [\"groonga\", \"crud\", \"search\", \"dump\", \"status\"],\n"
"          \"schema\": {\n"
"            \"Store\": {\n"
"              \"type\": \"Hash\",\n"
"              \"keyType\": \"ShortText\",\n"
"              \"columns\": {\n"
"                \"location\": {\n"
"                  \"type\": \"Scalar\",\n"
"                  \"valueType\": \"WGS84GeoPoint\"\n"
"                }\n"
"              }\n"
"            },\n"
"            \"Location\": {\n"
"              \"type\": \"PatriciaTrie\",\n"
"              \"keyType\": \"WGS84GeoPoint\",\n"
"              \"columns\": {\n"
"                \"store\": {\n"
"                  \"type\": \"Index\",\n"
"                  \"valueType\": \"Store\",\n"
"                  \"indexOptions\": {\n"
"                    \"sources\": [\"location\"]\n"
"                  }\n"
"                }\n"
"              }\n"
"            },\n"
"            \"Term\": {\n"
"              \"type\": \"PatriciaTrie\",\n"
"              \"keyType\": \"ShortText\",\n"
"              \"normalizer\": \"NormalizerAuto\",\n"
"              \"tokenizer\": \"TokenBigram\",\n"
"              \"columns\": {\n"
"                \"stores__key\": {\n"
"                  \"type\": \"Index\",\n"
"                  \"valueType\": \"Store\",\n"
"                  \"indexOptions\": {\n"
"                    \"position\": true,\n"
"                    \"sources\": [\"_key\"]\n"
"                  }\n"
"                }\n"
"              }\n"
"            }\n"
"          },\n"
"          \"replicas\": [\n"
"            {\n"
"              \"dimension\": \"_key\",\n"
"              \"slicer\": \"hash\",\n"
"              \"slices\": [\n"
"                {\n"
"                  \"volume\": {\n"
"                    \"address\": \"192.168.100.50:10031/droonga.000\"\n"
"                  }\n"
"                },\n"
"                {\n"
"                  \"volume\": {\n"
"                    \"address\": \"192.168.100.50:10031/droonga.001\"\n"
"                  }\n"
"                },\n"
"                {\n"
"                  \"volume\": {\n"
"                    \"address\": \"192.168.100.50:10031/droonga.002\"\n"
"                  }\n"
"                }\n"
"              ]\n"
"            },\n"
"            {\n"
"              \"dimension\": \"_key\",\n"
"              \"slicer\": \"hash\",\n"
"              \"slices\": [\n"
"                {\n"
"                  \"volume\": {\n"
"                    \"address\": \"192.168.100.50:10031/droonga.010\"\n"
"                  }\n"
"                },\n"
"                {\n"
"                  \"volume\": {\n"
"                    \"address\": \"192.168.100.50:10031/droonga.011\"\n"
"                  }\n"
"                },\n"
"                {\n"
"                  \"volume\": {\n"
"                    \"address\": \"192.168.100.50:10031/droonga.012\"\n"
"                  }\n"
"                }\n"
"              ]\n"
"            }\n"
"          ]\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid "This `catalog.json` defines a dataset `Default` as:"
msgstr "この`catalog.json`では、データセット`Starbucks`を以下のように定義しています："

msgid ""
" * At the top level, there is one volume based on two sub volumes, called \"rep"
"licas\".\n"
" * At the next lower level, one replica volume is based on three sub volumes, "
"called \"slices\".\n"
"   They are minimum elements constructing a Droonga's dataset."
msgstr ""
" * 最上位には1つのボリュームがあり、このボリュームには「レプリカ」と名付けられた2つのサブボリュームが含まれる。\n"
" * 1段階下がった次のレベルには、1つのレプリカ・ボリュームごとに「スライス」と名付けられた3つのサブボリュームが含まれる。\n"
"   これらはDroongaのデータセットの最小の構成要素である。"

msgid ""
"These six atomic volumes having `\"address\"` information are internally called "
"as *single volume*s.\n"
"The `\"address\"` indicates the location of the corresponding physical storage w"
"hich is a database for Groonga, they are managed by `droonga-engine` instances"
" automatically."
msgstr ""
"これらの6つの、`\"address\"`の情報を持つ最小単位のボリュームは、内部的に*シングル・ボリューム*と呼ばれます。\n"
"`\"address\"`の情報は、対応する物理的なストレージであるGroongaのデータベースの位置を示していて、それらのデータベースは`droonga-en"
"gine`によって自動的に作成されます。"

msgid ""
"For more details of the configuration file `catalog.json`, see [the reference "
"manual of catalog.json](/reference/catalog)."
msgstr "`catalog.json` の詳細については [catalog.json](/ja/reference/catalog) を参照してください。"

msgid "### Start and stop the `droonga-engine` service"
msgstr "### `droonga-engine`サービスの起動と終了"

msgid "The `droonga-engine` service can be started via the `service` command:"
msgstr "`droonga-engine`サービスは`service`コマンドを使って起動できます:"

msgid ""
"~~~\n"
"# service droonga-engine start\n"
"~~~"
msgstr ""

msgid "To stop it, you also have to use the `service` command:"
msgstr "終了する場合も、`service`コマンドを使います:"

msgid ""
"~~~\n"
"# service droonga-engine stop\n"
"~~~"
msgstr ""

msgid "After confirmation, start the `droonga-engine` again."
msgstr "確認できたら、再び`droonga-engine`を起動します。"

msgid "### Create a database"
msgstr "### データベースを作成する"

msgid ""
"After a Droonga engine is started, let's load data.\n"
"Prepare `stores.jsons` including location data of stores."
msgstr ""
"Dronga Engine が起動したので、データを投入しましょう。\n"
"店舗のデータ `stores.jsons` を用意します。"

msgid "stores.jsons:"
msgstr ""

msgid ""
"~~~\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"1st Avenue & 75th St. - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.770262,-73.954798\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"76th & Second - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.771056,-73.956757\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"2nd Ave. & 9th Street - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.729445,-73.987471\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"15th & Third - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.733946,-73.9867\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"41st and Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.755111,-73.986225\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"84th & Third Ave - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.777485,-73.954979\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"150 E. 42nd Street - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.750784,-73.975582\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"West 43rd and Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.756197,-73.985624\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Macy's 35th Street Balcony - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.750703,-73.989787\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Macy's 6th Floor - Herald Square - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.750703,-73.989787\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Herald Square- Macy's - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.750703,-73.989787\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Macy's 5th Floor - Herald Square - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.750703,-73.989787\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"80th & York - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.772204,-73.949862\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Columbus @ 67th - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.774009,-73.981472\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"45th & Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.75766,-73.985719\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Marriott Marquis - Lobby - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.759123,-73.984927\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Second @ 81st - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.77466,-73.954447\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"52nd & Seventh - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.761829,-73.981141\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"1585 Broadway (47th) - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.759806,-73.985066\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"85th & First - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.776101,-73.949971\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"92nd & 3rd - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.782606,-73.951235\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"165 Broadway - 1 Liberty - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.709727,-74.011395\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"1656 Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.762434,-73.983364\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"54th & Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.764275,-73.982361\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Limited Brands-NYC - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.765219,-73.982025\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"19th & 8th - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.743218,-74.000605\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"60th & Broadway-II - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.769196,-73.982576\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"63rd & Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.771376,-73.982709\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"195 Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.710703,-74.009485\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"2 Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.704538,-74.01324\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"2 Columbus Ave. - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.769262,-73.984764\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"NY Plaza - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.702802,-74.012784\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"36th and Madison - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.748917,-73.982683\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"125th St. btwn Adam Clayton & FDB - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.808952,-73.948229\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"70th & Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.777463,-73.982237\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"2138 Broadway - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.781078,-73.981167\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"118th & Frederick Douglas Blvd. - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.806176,-73.954109\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"42nd & Second - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.750069,-73.973393\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Broadway @ 81st - New York NY  (W)\",\n"
"    \"values\": {\n"
"      \"location\": \"40.784972,-73.978987\"\n"
"    }\n"
"  }\n"
"}\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"add\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Fashion Inst of Technology - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"40.746948,-73.994557\"\n"
"    }\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid "Open another terminal and send the json to the Droonga engine."
msgstr "もう一つターミナルを開いて、jsonをDroonga engineに送信しましょう。"

msgid "Send `stores.jsons` as follows:"
msgstr "以下のようにして`stores.json`を送信します:"

msgid ""
"~~~\n"
"$ droonga-request stores.jsons\n"
"Elapsed time: 0.01101195\n"
"[\n"
"  \"droonga.message\",\n"
"  1393562553,\n"
"  {\n"
"    \"inReplyTo\": \"1393562553.8918273\",\n"
"    \"statusCode\": 200,\n"
"    \"type\": \"add.result\",\n"
"    \"body\": true\n"
"  }\n"
"]\n"
"...\n"
"Elapsed time: 0.004817463\n"
"[\n"
"  \"droonga.message\",\n"
"  1393562554,\n"
"  {\n"
"    \"inReplyTo\": \"1393562554.2447524\",\n"
"    \"statusCode\": 200,\n"
"    \"type\": \"add.result\",\n"
"    \"body\": true\n"
"  }\n"
"]\n"
"~~~"
msgstr ""

msgid "Now a Droonga engine for searching Starbucks stores database is ready."
msgstr "Droonga engineを用いてスターバックスの店舗データベースを検索する準備ができました。"

msgid "### Send request with droonga-request"
msgstr "### droonga-requestでリクエストを送る"

msgid "Check if it is working. Create a query as a JSON file as follows."
msgstr "動作を確認してみましょう。クエリを以下のようなJSONファイルとして作成します。"

msgid "search-all-stores.json:"
msgstr ""

msgid ""
"~~~\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"type\": \"search\",\n"
"  \"body\": {\n"
"    \"queries\": {\n"
"      \"stores\": {\n"
"        \"source\": \"Store\",\n"
"        \"output\": {\n"
"          \"elements\": [\n"
"            \"startTime\",\n"
"            \"elapsedTime\",\n"
"            \"count\",\n"
"            \"attributes\",\n"
"            \"records\"\n"
"          ],\n"
"          \"attributes\": [\"_key\"],\n"
"          \"limit\": -1\n"
"        }\n"
"      }\n"
"    }\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid "Send the request to the Droonga Engine:"
msgstr "Droonga Engine にリクエストを送信します:"

msgid ""
"~~~\n"
"$ droonga-request search-all-stores.json\n"
"Elapsed time: 0.008286785\n"
"[\n"
"  \"droonga.message\",\n"
"  1393562604,\n"
"  {\n"
"    \"inReplyTo\": \"1393562604.4970381\",\n"
"    \"statusCode\": 200,\n"
"    \"type\": \"search.result\",\n"
"    \"body\": {\n"
"      \"stores\": {\n"
"        \"count\": 40,\n"
"        \"records\": [\n"
"          [\n"
"            \"15th & Third - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"41st and Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"84th & Third Ave - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Macy's 35th Street Balcony - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"Second @ 81st - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"52nd & Seventh - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"1585 Broadway (47th) - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"54th & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"60th & Broadway-II - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"63rd & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2 Columbus Ave. - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"NY Plaza - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2138 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Broadway @ 81st - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"76th & Second - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2nd Ave. & 9th Street - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"150 E. 42nd Street - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Macy's 6th Floor - Herald Square - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Herald Square- Macy's - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"Macy's 5th Floor - Herald Square - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Marriott Marquis - Lobby - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"85th & First - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"1656 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Limited Brands-NYC - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"2 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"36th and Madison - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"125th St. btwn Adam Clayton & FDB - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"118th & Frederick Douglas Blvd. - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Fashion Inst of Technology - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"1st Avenue & 75th St. - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"West 43rd and Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"80th & York - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Columbus @ 67th - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"45th & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"92nd & 3rd - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"165 Broadway - 1 Liberty - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"19th & 8th - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"195 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"70th & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"42nd & Second - New York NY  (W)\"\n"
"          ]\n"
"        ]\n"
"      }\n"
"    }\n"
"  }\n"
"]\n"
"~~~"
msgstr ""

msgid ""
"Now the store names are retrieved. The engine looks working correctly.\n"
"Next, setup a protocol adapter for clients to accept search requests via HTTP."
msgstr ""
"店舗の名前が取得できました。エンジンは正しく動作しているようです。引き続き Protocol Adapter を構築して、検索リクエストをHTTPで受け付け"
"られるようにしましょう。"

msgid "## Setup an HTTP Protocol Adapter"
msgstr "## HTTP Protocol Adapter を用意する"

msgid "Let's use the `droonga-http-server` as an HTTP protocol adapter."
msgstr "HTTP Protocol Adapterとして`droonga-http-server`を使用しましょう。"

msgid "### Install the droonga-http-server"
msgstr "### droonga-http-serverをインストールする"

msgid ""
"~~~\n"
"# curl https://raw.githubusercontent.com/droonga/droonga-http-server/master/in"
"stall.sh | \\\n"
"    bash\n"
"...\n"
"Installing droonga-http-server from npmjs.org...\n"
"...\n"
"Preparing the user...\n"
"...\n"
"Setting up the configuration directory...\n"
"The droonga-engine service is detected on this node.\n"
"The droonga-http-server is configured to be connected\n"
"to this node (XXXXXXXX).\n"
"This node is configured with a hostname XXXXXXXX."
msgstr ""

msgid ""
"Registering droonga-http-server as a service...\n"
"...\n"
"Successfully installed droonga-http-server.\n"
"~~~"
msgstr ""

msgid "### Start and stop the `droonga-http-server` service"
msgstr "### `droonga-engine`サービスの起動と終了"

msgid "The `droonga-http-server` service can be started via the `service` command:"
msgstr "`droonga-http-server`サービスは`service`コマンドを使って起動できます:"

msgid ""
"~~~\n"
"# service droonga-http-server start\n"
"~~~"
msgstr ""

msgid ""
"~~~\n"
"# service droonga-http-server stop\n"
"~~~"
msgstr ""

msgid "After confirmation, start the `droonga-http-server` again."
msgstr "確認できたら、再び`droonga-http-server`を起動します。"

msgid "### Search request via HTTP"
msgstr "### HTTPでの検索リクエスト"

msgid ""
"We're all set. Let's send a search request to the protocol adapter via HTTP. A"
"t first, try to get all records of the `Stores` table by a request like follow"
"ing. (Note: The `attributes=_key` parameter means \"export the value of the col"
"umn `_key` to the search result\". If you don't set the parameter, each record "
"returned in the `records` will become just a blank array. You can specify mult"
"iple column names by the delimiter `,`. For example `attributes=_key,location`"
" will return both the primary key and the location for each record.)"
msgstr ""
"準備が整いました。 Protocol Adapter に向けて HTTP 経由でリクエストを発行し、データベースに問い合わせを行ってみましょう。まずは `S"
"hops` テーブルの中身を取得してみます。以下のようなリクエストを用います。(`attributes=_key` を指定しているのは「検索結果に `_ke"
"y` 値を含めて返してほしい」という意味です。これがないと、`records` に何も値がないレコードが返ってきてしまいます。`attributes` パラ"
"メータには `,` 区切りで複数の属性を指定することができます。`attributes=_key,location` と指定することで、緯度経度もレスポンス"
"として受け取ることができます)"

msgid ""
"    $ curl \"http://192.168.100.50:10041/tables/Store?attributes=_key&limit=-1\""
"\n"
"    {\n"
"      \"stores\": {\n"
"        \"count\": 40,\n"
"        \"records\": [\n"
"          [\n"
"            \"15th & Third - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"41st and Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"84th & Third Ave - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Macy's 35th Street Balcony - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"Second @ 81st - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"52nd & Seventh - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"1585 Broadway (47th) - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"54th & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"60th & Broadway-II - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"63rd & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2 Columbus Ave. - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"NY Plaza - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2138 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Broadway @ 81st - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"76th & Second - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2nd Ave. & 9th Street - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"150 E. 42nd Street - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Macy's 6th Floor - Herald Square - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Herald Square- Macy's - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"Macy's 5th Floor - Herald Square - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Marriott Marquis - Lobby - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"85th & First - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"1656 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Limited Brands-NYC - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"2 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"36th and Madison - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"125th St. btwn Adam Clayton & FDB - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"118th & Frederick Douglas Blvd. - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Fashion Inst of Technology - New York NY\"\n"
"          ],\n"
"          [\n"
"            \"1st Avenue & 75th St. - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"West 43rd and Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"80th & York - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"Columbus @ 67th - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"45th & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"92nd & 3rd - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"165 Broadway - 1 Liberty - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"19th & 8th - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"195 Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"70th & Broadway - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"42nd & Second - New York NY  (W)\"\n"
"          ]\n"
"        ]\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"Because the `count` says `40`, you know there are all 40 records in the table."
" Search result records are returned as an array `records`."
msgstr "`count` の値からデータが全部で 36 件あることがわかります。`records` に配列として検索結果が入っています。"

msgid ""
"Next step, let's try more meaningful query. To search stores which contain \"Co"
"lumbus\" in their name, give `Columbus` as the parameter `query`, and give `_ke"
"y` as the parameter `match_to` which means the column to be searched. Then:"
msgstr ""
"もう少し複雑なクエリを試してみましょう。例えば、店名に「Columbus」を含む店舗を検索します。`query` パラメータにクエリ `Columbus` "
"を、`match_to` パラメータに検索対象として `_key` を指定し、以下のようなリクエストを発行します。"

msgid ""
"    $ curl \"http://192.168.100.50:10041/tables/Store?query=Columbus&match_to=_"
"key&attributes=_key&limit=-1\"\n"
"    {\n"
"      \"stores\": {\n"
"        \"count\": 2,\n"
"        \"records\": [\n"
"          [\n"
"            \"Columbus @ 67th - New York NY  (W)\"\n"
"          ],\n"
"          [\n"
"            \"2 Columbus Ave. - New York NY  (W)\"\n"
"          ]\n"
"        ]\n"
"      }\n"
"    }"
msgstr ""

msgid "As the result, two stores are found by the search condition."
msgstr "以上 2 件が検索結果として該当することがわかりました。"

msgid ""
"For more details of the Droonga HTTP Server, see the [reference manual][http-s"
"erver]."
msgstr "Droonga HTTP Serverの詳細については[リファレンスマニュアル][http-server]を参照して下さい。"

msgid "## Conclusion"
msgstr "## まとめ"

msgid ""
"In this tutorial, you did setup both packages [droonga-engine][] and [droonga-"
"http-server][] which construct [Droonga][] service on a [Ubuntu Linux][Ubuntu]"
" or [CentOS][] computer.\n"
"Moreover, you built a search system based on an HTTP protocol adapter with a D"
"roonga engine, and successfully searched."
msgstr ""
"[Ubuntu Linux][Ubuntu] または [CentOS][] 上に [Droonga][] を構成するパッケージである [droonga-en"
"gine][] と [droonga-http-server][] をセットアップしました。\n"
"これらのパッケージを利用することで、HTTP Protocol Adapter と Droonga Engine からなるシステムを構築し、実際に検索を行い"
"ました。"

msgid ""
"  [http-server]: ../../reference/http-server/\n"
"  [Ubuntu]: http://www.ubuntu.com/\n"
"  [CentOS]: https://www.centos.org/\n"
"  [Droonga]: https://droonga.org/\n"
"  [droonga-engine]: https://github.com/droonga/droonga-engine\n"
"  [droonga-http-server]: https://github.com/droonga/droonga-http-server\n"
"  [Groonga]: http://groonga.org/\n"
"  [Ruby]: http://www.ruby-lang.org/\n"
"  [nvm]: https://github.com/creationix/nvm\n"
"  [Socket.IO]: http://socket.io/\n"
"  [Fluentd]: http://fluentd.org/\n"
"  [Node.js]: http://nodejs.org/"
msgstr ""
