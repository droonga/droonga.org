msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-03-05 12:52+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Droonga tutorial: Getting started/How to migrate from Groonga?\"\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: \"Droongaチュートリアル: 使ってみる/Groongaからの移行手順\"\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## The goal of this tutorial"
msgstr "## チュートリアルのゴール"

msgid ""
"Learning steps to run a Droonga cluster by your hand, and use it as a [Groonga"
"][groonga] compatible server."
msgstr "Droongaクラスタを自分で構築して、[Groonga][groonga]互換のサーバとして利用できるようにするための手順を学ぶこと。"

msgid "## Precondition"
msgstr "## 前提条件"

msgid ""
"* You must have basic knowledge and experiences to set up and operate an [Ubun"
"tu][] Server.\n"
"* You must have basic knowledge and experiences to use the [Groonga][groonga] "
"via HTTP."
msgstr ""
"* [Ubuntu][]サーバのセットアップと操作について、基本的な知識と経験があること。\n"
"* [Groonga][groonga]のHTTP経由での利用について、基本的な知識と経験があること。"

msgid "## What's Droonga?"
msgstr "## Droongaとは何か？"

msgid ""
"It is a data processing engine based on a distributed architecture, named afte"
"r the terms \"distributed-Groonga\".\n"
"As its name suggests, it can work as a Groonga compatible server with some imp"
"rovements - replication and sharding."
msgstr ""
"Droongaは分散アーキテクチャに基づくデータ処理エンジンで、「distributed-Groonga」がその名の由来です。\n"
"名前が示す通り、Droongaはいくつかの点での改善（具体的には、レプリケーションとシャーディング）を含んだGroonga互換のサーバとして動作することがで"
"きます。"

msgid ""
"In a certain sense, the Droonga is quite different from Groonga, about its arc"
"hitecture, design, API etc.\n"
"However, you don't have to understand the whole architecture of the Droonga, i"
"f you simply use it just as a Groonga compatible server."
msgstr ""
"アーキテクチャ、設計、APIなどの点で、DroongaはGroongaと大きく異なっています。\n"
"しかしながら、Droongaを単にGroonga互換のサーバとして使う限りにおいては、Droongaのアーキテクチャ全体を理解する必要はありません。"

msgid ""
"For example, let's try to build a database system to find [Starbucks stores in"
" New York](http://geocommons.com/overlays/430038)."
msgstr ""
"例として、[ニューヨークにあるスターバックスの店舗](http://geocommons.com/overlays/430038)を検索できるデータベースシ"
"ステムを作成することにします。"

msgid "## Set up a Droonga cluster"
msgstr "## Droongaクラスタをセットアップする"

msgid "### Prepare an environment for experiments"
msgstr "### 実験用の環境を準備する"

msgid ""
"Prepare a computer at first.\n"
"This tutorial describes steps to set up a Droonga cluster based on existing co"
"mputers.\n"
"Following instructions are basically written for a successfully prepared virtu"
"al machine of the `Ubuntu 13.10 x64` on the service [DigitalOcean](https://www"
".digitalocean.com/), with an available console."
msgstr ""
"まず最初にコンピュータを用意します。\n"
"このチュートリアルは、既存のコンピュータを使ってDroongaクラスタを構築する手順について解説しています。\n"
"以下の説明は基本的には、[DigitalOcean](https://www.digitalocean.com/)上のサーバで`Ubuntu 13.10 x"
"64`の仮想マシンが正しく準備されており、コンソールが利用できる状態になっている、という前提に基づいています。"

msgid ""
"NOTE: Make sure to use instances with >= 2GB memory equipped, at least during "
"installation of required packages for Droonga.\n"
"Otherwise, you may experience a strange build error."
msgstr ""
"注意：Droongaの依存パッケージをインストールする前に、仮想マシンのインスタンスが少なくとも2GB以上のメモリを備えていることを確認して下さい。\n"
"メモリが足りないと、ビルド時におかしなエラーに遭遇することになります。"

msgid "You need to prepare two or more computers for effective replication."
msgstr "また、有効なレプリケーションを実現するためには2台以上のコンピュータを用意する必要もあります。"

msgid "### Steps to install Droonga components"
msgstr "### Droongaの構成コンポーネントをインストールする"

msgid ""
"Groonga provides binary packages and you can install Groonga easily, for some "
"environments.\n"
"(See: [how to install Groonga](http://groonga.org/docs/install.html))"
msgstr ""
"Groongaはバイナリのパッケージを提供しているため、環境によっては簡単にインストールできます。\n"
"（[Groongaのインストール手順](http://groonga.org/docs/install.html)を参照）"

msgid ""
"However, currently there is no such an easy way to set up a database system ba"
"sed on Droonga.\n"
"We are planning to provide a better way (like a chef cookbook), but for now, y"
"ou have to set up it by your hand."
msgstr ""
"しかしながら、現在の所Droongaに基づくデータベースシステムをセットアップするための簡単な方法はありません。\n"
"将来的にはより良い方法（例えばChefのクックブックなど）を用意する計画がありますが、今のところは、セットアップは手動で行う必要があります。"

msgid ""
"A database system based on the Droonga is called *Droonga cluster*.\n"
"A Droonga cluster is constructed from multiple computers, called *Droonga node"
"*.\n"
"So you have to set up multiple Droonga nodes for your Droonga cluster."
msgstr ""
"Droongaベースのデータベースシステムは、*Droongaクラスタ*と呼ばれます。\n"
"Droongaクラスタは、*Droongaノード*と呼ばれる複数のコンピュータによって構成されます。\n"
"よって、Droongaクラスタを構築するには複数のDroongaノードをセットアップする必要があります。"

msgid "Assume that you have two computers: `192.168.0.10` and `192.168.0.11`."
msgstr "`192.168.0.10`と`192.168.0.11`の2つのコンピュータがあると仮定しましょう。"

msgid " 1. Install required platform packages, *on each computer*."
msgstr " 1. *それぞれのコンピュータで*、プラットフォームごとに要求されるパッケージをインストールする。"

msgid ""
"        # apt-get update\n"
"        # apt-get -y upgrade\n"
"        # apt-get install -y ruby ruby-dev build-essential nodejs nodejs-legac"
"y npm"
msgstr ""

msgid ""
" 2. Install a gem package `droonga-engine`, *on each computer*.\n"
"    It is the core component provides most features of Droonga system."
msgstr ""
" 2. *それぞれのコンピュータで*、Gemパッケージ `droonga-engine` をインストールする。\n"
"    これはDroongaシステムの主要な機能を提供する、核となるコンポーネントです。"

msgid "        # gem install droonga-engine"
msgstr ""

msgid ""
" 3. Install an npm package `droonga-http-server`, *on each computer*.\n"
"    It is the frontend component required to translate HTTP requests to Droong"
"a's native one."
msgstr ""
" 3. *それぞれのコンピュータで*、npmパッケージ `droonga-http-server` をインストールする。\n"
"    これはHTTPのリクエストをDroongaネイティブのリクエストに変換するために必要な、フロントエンドとなるコンポーネントです。"

msgid "        # npm install -g droonga-http-server"
msgstr ""

msgid ""
" 4. Prepare a configuration directory for a Droonga node, *on each computer*.\n"
"    All physical databases are placed under this directory."
msgstr ""
" 4. *それぞれのコンピュータで*、Droongaノードとしての情報を保存するための設定ディレクトリを用意する。\n"
"    すべてのデータベースの実体は、このディレクトリ以下に保存されます。"

msgid ""
"        # mkdir ~/droonga\n"
"        # cd ~/droonga"
msgstr ""

msgid ""
" 5. Create a `catalog.json`, *on one of Droonga nodes*.\n"
"    The file defines the structure of your Droonga cluster.\n"
"    You'll specify the name of the dataset via the `--dataset` option and the "
"list of your Droonga node's IP addresses via the `--hosts` option, like:"
msgstr ""
" 5. *いずれか1つのDroongaノードで*、`catalog.json`を作成します。\n"
"    このファイルはDroongaクラスタの構成を定義する物です。\n"
"    データセット名を`--dataset`オプション、各DroongaノードのIPアドレスを`--hosts`オプションで、以下のように指定して下さい："

msgid ""
"        # droonga-engine-catalog-generate --hosts=192.168.0.10,192.168.0.11 \\\n"
"                                          --output=./catalog.json"
msgstr ""

msgid ""
"    If you have only one computer and trying to set up it just for testing, th"
"en you'll do:"
msgstr "    コンピュータが1台だけの単なる検証用の構成をセットアップする場合は、以下のようにします："

msgid ""
"        # droonga-engine-catalog-generate --hosts=127.0.0.1 \\\n"
"                                          --output=./catalog.json"
msgstr ""

msgid " 6. Share the generated `catalog.json` *to your all Droonga nodes*."
msgstr " 6. *すべてのDroongaノードに*、先程作成した`catalog.json`を共有します。"

msgid "        # scp ~/droonga/catalog.json 192.168.0.11:~/droonga/"
msgstr ""

msgid ""
"    (Or, of course, you can generate same `catalog.json` on each computer, ins"
"tead of copying.)"
msgstr "    （もしくは、できあがったファイルをコピーする代わりに、各コンピュータ上で同じ設定の`catalog.json`を作成しても結構です。）"

msgid ""
"All Droonga nodes for your Droonga cluster are prepared by steps described abo"
"ve.\n"
"Let's continue to the next step."
msgstr ""
"上記の手順により、DroongaクラスタのためのすべてのDroongaノードの準備が完了しました。\n"
"次の段階に進みましょう。"

msgid "## Use the Droonga cluster, via HTTP"
msgstr "## DroongaクラスタをHTTP経由で使用する"

msgid "### Start and stop services on each Droonga node"
msgstr "### 各Droongaノードの上でのサービスの開始と停止"

msgid "You can run Groonga as an HTTP server with the option `-d`, like:"
msgstr "GroongaをHTTPサーバとして使う場合は、以下のように `-d` オプションを指定するだけでサーバを起動できます："

msgid "    # groonga -p 10041 -d --protocol http /tmp/databases/db"
msgstr ""

msgid ""
"On the other hand, you have to run multiple servers for each Droonga node to u"
"se your Droonga cluster via HTTP."
msgstr "一方、DroongaクラスタをHTTP経由で使うためには、各Droongaノードにおいて複数のサービスを起動する必要があります。"

msgid "To start them, run commands like following on each Droonga node:"
msgstr "サービスを起動するには、各Droongaノードで以下のようにコマンドを実行します："

msgid ""
"    # cd ~/droonga\n"
"    # host=192.168.0.10\n"
"    # DROONGA_BASE_DIR=$PWD\n"
"    # droonga-engine --host=$host \\\n"
"                     --log-file=$DROONGA_BASE_DIR/droonga-engine.log \\\n"
"                     --daemon \\\n"
"                     --pid-file=$DROONGA_BASE_DIR/droonga-engine.pid\n"
"    # env NODE_ENV=production \\\n"
"        droonga-http-server --port=10041 \\\n"
"                            --receive-host-name=$host \\\n"
"                            --droonga-engine-host-name=$host \\\n"
"                            --cache-size=-1 \\\n"
"                            --daemon \\\n"
"                            --pid-file=$DROONGA_BASE_DIR/droonga-http-server.p"
"id"
msgstr ""

msgid ""
"Note that you have to specify the host name of the Droonga node itself via som"
"e options.\n"
"It will be used to communicate with other Droonga nodes in the cluster.\n"
"So you have to specify different host name on another Droonga node, like:"
msgstr ""
"いくつかのオプションにおいて、そのDroongaノード自身のホスト名を指定する必要がある事に注意して下さい。\n"
"この情報は、クラスタ内の他のDroongaノードとの通信のために使われます。\n"
"よって、別のDroongaノード上では以下のように別のホスト名を指定する事になります："

msgid ""
"    # cd ~/droonga\n"
"    # host=192.168.0.11\n"
"    # droonga-engine --host=$host \\\n"
"    ..."
msgstr ""

msgid ""
"By the command two nodes construct a cluster and they monitor each other.\n"
"If one of nodes dies and there is any still alive node, survivor(s) will work "
"as the Droonga cluster.\n"
"Then you can recover the dead node and re-join it to the cluster secretly."
msgstr ""
"このコマンドにより、2つのノードはクラスタを形成し、互いの生死を監視するようになります。もしクラスタ内のどれか1つのノードが機能を停止し、他のノードがまだ機"
"能し続けていた場合には、残ったノードがDroongaクラスタとして動作し続けます。そのため、そのような事態が起こっても秘密裏に、機能停止したノードを復旧した"
"りクラスタに復帰させたりすることができます。"

msgid ""
"Let's make sure that the cluster works, by the `system.status` command.\n"
"You can see the result via HTTP, like:"
msgstr ""
"クラスタが動作している事を、`system.status` コマンドを使って確認してみましょう。\n"
"コマンドはHTTP経由で実行できます:"

msgid ""
"~~~\n"
"# curl \"http://192.168.0.10:10041/droonga/system/status\"\n"
"{\n"
"  \"nodes\": {\n"
"    \"192.168.0.10:10031/droonga\": {\n"
"      \"live\": true\n"
"    },\n"
"    \"192.168.0.11:10031/droonga\": {\n"
"      \"live\": true\n"
"    }\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid ""
"The result says that two nodes are working correctly.\n"
"Because it is a cluster, another endpoint returns same result."
msgstr ""
"この結果は、2つのノードが正常に動作している事を示しています。\n"
"Droongaはクラスタで動作するので、他のエンドポイントも同じ結果を返します。"

msgid ""
"~~~\n"
"# curl \"http://192.168.0.11:10041/droonga/system/status\"\n"
"{\n"
"  \"nodes\": {\n"
"    \"192.168.0.10:10031/droonga\": {\n"
"      \"live\": true\n"
"    },\n"
"    \"192.168.0.11:10031/droonga\": {\n"
"      \"live\": true\n"
"    }\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid "To stop services, run commands like following on each Droonga node:"
msgstr "サービスを停止するには、以下のコマンドを各Droongaノード上で実行します："

msgid ""
"    # kill $(cat $DROONGA_BASE_DIR/droonga-engine.pid)\n"
"    # kill $(cat $DROONGA_BASE_DIR/droonga-http-server.pid)"
msgstr ""

msgid "### Create a table, columns, and indexes"
msgstr "### テーブル、カラム、インデックスの作成"

msgid "Now your Droonga cluster actually works as a Groonga's HTTP server."
msgstr "以上の手順で、Groonga HTTPサーバ互換のサービスとして動作するDroongaクラスタができました。"

msgid ""
"Requests are completely same to ones for a Groonga server.\n"
"To create a new table `Store`, you just have to send a GET request for the `ta"
"ble_create` command, like:"
msgstr ""
"リクエストの送信方法はGroongaサーバの場合と全く同じです。\n"
"新しいテーブル `Store` を作るには、`table_create` コマンドにあたるGETリクエストを送信して下さい:"

msgid ""
"    # endpoint=\"http://192.168.0.10:10041\"\n"
"    # curl \"${endpoint}/d/table_create?name=Store&flags=TABLE_PAT_KEY&key_type"
"=ShortText\"\n"
"    [[0,1401358896.360356,0.0035653114318847656],true]"
msgstr ""

msgid ""
"Note that you have to specify the host, one of Droonga nodes with active droon"
"ga-http-server, in your Droonga cluster.\n"
"In other words, you can use any favorite node in the cluster as an endpoint.\n"
"All requests will be distributed to suitable nodes in the cluster."
msgstr ""
"リクエストの送信先として、Droongaノード中でdroonga-http-serverが動作しているDroongaノードのどれか1つを指定する必要がある事"
"に注意して下さい。\n"
"言い換えると、接続先（エンドポイント）としてはクラスタ中のどのノードでも好きな物を使う事ができます。\n"
"すべてのリクエストは、クラスタ中の適切なノードに配送されます。"

msgid ""
"Next, create new columns `name` and `location` to the `Store` table by the `co"
"lumn_create` command, like:"
msgstr "次は、`column_create` コマンドを使って `Store` テーブルに `name` と `location` という新しいカラムを作ります:"

msgid ""
"    # curl \"${endpoint}/d/column_create?table=Store&name=name&flags=COLUMN_SCA"
"LAR&type=ShortText\"\n"
"    [[0,1401358348.6541538,0.0004096031188964844],true]\n"
"    # curl \"${endpoint}/d/column_create?table=Store&name=location&flags=COLUMN"
"_SCALAR&type=WGS84GeoPoint\"\n"
"    [[0,1401358359.084659,0.002511262893676758],true],true]"
msgstr ""

msgid "Create indexes also."
msgstr "インデックスも作成しましょう。"

msgid ""
"    # curl \"${endpoint}/d/table_create?name=Term&flags=TABLE_PAT_KEY&key_type="
"ShortText&default_tokenizer=TokenBigram&normalizer=NormalizerAuto\"\n"
"    [[0,1401358475.7229664,0.002419710159301758],true]\n"
"    # curl \"${endpoint}/d/column_create?table=Term&name=store_name&flags=COLUM"
"N_INDEX|WITH_POSITION&type=Store&source=name\"\n"
"    [[0,1401358494.1656318,0.006799221038818359],true]\n"
"    # curl \"${endpoint}/d/table_create?name=Location&flags=TABLE_PAT_KEY&key_t"
"ype=WGS84GeoPoint\"\n"
"    [[0,1401358505.708896,0.0016951560974121094],true]\n"
"    # curl \"${endpoint}/d/column_create?table=Location&name=store&flags=COLUMN"
"_INDEX&type=Store&source=location\"\n"
"    [[0,1401358519.6187897,0.024788379669189453],true]"
msgstr ""

msgid ""
"*IMPORTANT NOTE*: Don't run `table_list` or `column_list` before the table is "
"completely created.\n"
"Otherwise indexes can be broken.\n"
"This is a known issue on the version 1.0.4, and it will be fixed in a future r"
"elease."
msgstr ""
"*注意*: テーブルが完全にできあがるまでは、`table_list` や `column_list` といったコマンドを実行しないでください。テーブルがで"
"きあがる前にこれらのコマンドを実行してしまうと、インデックスが破損した状態になってしまいます。これはバージョン{{ site.version.current"
" }}での既知の不具合で、将来のバージョンで修正される予定です。"

msgid ""
"OK, now the table has been created successfully.\n"
"Let's see it by the `table_list` command:"
msgstr ""
"さて、テーブルを正しく作成できました。\n"
"`table_list` コマンドを使って、作成されたテーブルの情報を見てみましょう:"

msgid ""
"    # curl \"${endpoint}/d/table_list\"\n"
"    [[0,1401358908.9126804,0.001600027084350586],[[[\"id\",\"UInt32\"],[\"name\",\"Sh"
"ortText\"],[\"path\",\"ShortText\"],[\"flags\",\"ShortText\"],[\"domain\",\"ShortText\"],[\""
"range\",\"ShortText\"],[\"default_tokenizer\",\"ShortText\"],[\"normalizer\",\"ShortText"
"\"]],[256,\"Store\",\"/home/vagrant/droonga/000/db.0000100\",\"TABLE_PAT_KEY|PERSIST"
"ENT\",\"ShortText\",null,null,null]]]"
msgstr ""

msgid "Because it is a cluster, another endpoint returns same result."
msgstr "Droongaはクラスタで動作するので、他のエンドポイントも同じ結果を返します。"

msgid ""
"    # curl \"http://192.168.0.11:10041/d/table_list\"\n"
"    [[0,1401358908.9126804,0.001600027084350586],[[[\"id\",\"UInt32\"],[\"name\",\"Sh"
"ortText\"],[\"path\",\"ShortText\"],[\"flags\",\"ShortText\"],[\"domain\",\"ShortText\"],[\""
"range\",\"ShortText\"],[\"default_tokenizer\",\"ShortText\"],[\"normalizer\",\"ShortText"
"\"]],[256,\"Store\",\"/home/vagrant/droonga/000/db.0000100\",\"TABLE_PAT_KEY|PERSIST"
"ENT\",\"ShortText\",null,null,null]]]"
msgstr ""

msgid "### Load data to a table"
msgstr "### テーブルへのデータの読み込み"

msgid ""
"Let's load data to the `Store` table.\n"
"First, prepare the data as a JSON file `stores.json`."
msgstr ""
"それでは、`Store` テーブルにデータを読み込みましょう。\n"
"まず、データを `stores.json` という名前のJSON形式のファイルとして用意します。"

msgid "stores.json:"
msgstr ""

msgid ""
"~~~\n"
"[\n"
"[\"_key\",\"name\",\"location\"],\n"
"[\"store0\",\"1st Avenue & 75th St. - New York NY  (W)\",\"40.770262,-73.954798\"],\n"
"[\"store1\",\"76th & Second - New York NY  (W)\",\"40.771056,-73.956757\"],\n"
"[\"store2\",\"2nd Ave. & 9th Street - New York NY\",\"40.729445,-73.987471\"],\n"
"[\"store3\",\"15th & Third - New York NY  (W)\",\"40.733946,-73.9867\"],\n"
"[\"store4\",\"41st and Broadway - New York NY  (W)\",\"40.755111,-73.986225\"],\n"
"[\"store5\",\"84th & Third Ave - New York NY  (W)\",\"40.777485,-73.954979\"],\n"
"[\"store6\",\"150 E. 42nd Street - New York NY  (W)\",\"40.750784,-73.975582\"],\n"
"[\"store7\",\"West 43rd and Broadway - New York NY  (W)\",\"40.756197,-73.985624\"],"
"\n"
"[\"store8\",\"Macy's 35th Street Balcony - New York NY\",\"40.750703,-73.989787\"],\n"
"[\"store9\",\"Macy's 6th Floor - Herald Square - New York NY  (W)\",\"40.750703,-73"
".989787\"],\n"
"[\"store10\",\"Herald Square- Macy's - New York NY\",\"40.750703,-73.989787\"],\n"
"[\"store11\",\"Macy's 5th Floor - Herald Square - New York NY  (W)\",\"40.750703,-7"
"3.989787\"],\n"
"[\"store12\",\"80th & York - New York NY  (W)\",\"40.772204,-73.949862\"],\n"
"[\"store13\",\"Columbus @ 67th - New York NY  (W)\",\"40.774009,-73.981472\"],\n"
"[\"store14\",\"45th & Broadway - New York NY  (W)\",\"40.75766,-73.985719\"],\n"
"[\"store15\",\"Marriott Marquis - Lobby - New York NY\",\"40.759123,-73.984927\"],\n"
"[\"store16\",\"Second @ 81st - New York NY  (W)\",\"40.77466,-73.954447\"],\n"
"[\"store17\",\"52nd & Seventh - New York NY  (W)\",\"40.761829,-73.981141\"],\n"
"[\"store18\",\"1585 Broadway (47th) - New York NY  (W)\",\"40.759806,-73.985066\"],\n"
"[\"store19\",\"85th & First - New York NY  (W)\",\"40.776101,-73.949971\"],\n"
"[\"store20\",\"92nd & 3rd - New York NY  (W)\",\"40.782606,-73.951235\"],\n"
"[\"store21\",\"165 Broadway - 1 Liberty - New York NY  (W)\",\"40.709727,-74.011395"
"\"],\n"
"[\"store22\",\"1656 Broadway - New York NY  (W)\",\"40.762434,-73.983364\"],\n"
"[\"store23\",\"54th & Broadway - New York NY  (W)\",\"40.764275,-73.982361\"],\n"
"[\"store24\",\"Limited Brands-NYC - New York NY\",\"40.765219,-73.982025\"],\n"
"[\"store25\",\"19th & 8th - New York NY  (W)\",\"40.743218,-74.000605\"],\n"
"[\"store26\",\"60th & Broadway-II - New York NY  (W)\",\"40.769196,-73.982576\"],\n"
"[\"store27\",\"63rd & Broadway - New York NY  (W)\",\"40.771376,-73.982709\"],\n"
"[\"store28\",\"195 Broadway - New York NY  (W)\",\"40.710703,-74.009485\"],\n"
"[\"store29\",\"2 Broadway - New York NY  (W)\",\"40.704538,-74.01324\"],\n"
"[\"store30\",\"2 Columbus Ave. - New York NY  (W)\",\"40.769262,-73.984764\"],\n"
"[\"store31\",\"NY Plaza - New York NY  (W)\",\"40.702802,-74.012784\"],\n"
"[\"store32\",\"36th and Madison - New York NY  (W)\",\"40.748917,-73.982683\"],\n"
"[\"store33\",\"125th St. btwn Adam Clayton & FDB - New York NY\",\"40.808952,-73.94"
"8229\"],\n"
"[\"store34\",\"70th & Broadway - New York NY  (W)\",\"40.777463,-73.982237\"],\n"
"[\"store35\",\"2138 Broadway - New York NY  (W)\",\"40.781078,-73.981167\"],\n"
"[\"store36\",\"118th & Frederick Douglas Blvd. - New York NY  (W)\",\"40.806176,-73"
".954109\"],\n"
"[\"store37\",\"42nd & Second - New York NY  (W)\",\"40.750069,-73.973393\"],\n"
"[\"store38\",\"Broadway @ 81st - New York NY  (W)\",\"40.784972,-73.978987\"],\n"
"[\"store39\",\"Fashion Inst of Technology - New York NY\",\"40.746948,-73.994557\"]\n"
"]\n"
"~~~"
msgstr ""

msgid "Then, send it as a POST request of the `load` command, like:"
msgstr "データが準備できたら、`load` コマンドのPOSTリクエストとして送信します:"

msgid ""
"    # curl --data \"@stores.json\" \"${endpoint}/d/load?table=Store\"\n"
"    [[0,1401358564.909,0.158],[40]]"
msgstr ""

msgid "Now all data in the JSON file are successfully loaded."
msgstr "これで、JSONファイル中のすべてのデータが正しく読み込まれます。"

msgid "### Select data from a table"
msgstr "### テーブル中のデータを取り出す"

msgid "OK, all data is now ready."
msgstr "以上で、すべてのデータが準備できました。"

msgid "As the starter, let's select initial ten records with the `select` command:"
msgstr "試しに、`select` コマンドを使って最初の10レコードを取り出してみましょう:"

msgid ""
"    # curl \"${endpoint}/d/select?table=Store&output_columns=name&limit=10\"\n"
"    [[0,1401362059.7437818,0.00004935264587402344],[[[40],[[\"name\",\"ShortText\""
"]],[\"1st Avenue & 75th St. - New York NY  (W)\"],[\"76th & Second - New York NY "
" (W)\"],[\"Herald Square- Macy's - New York NY\"],[\"Macy's 5th Floor - Herald Squ"
"are - New York NY  (W)\"],[\"80th & York - New York NY  (W)\"],[\"Columbus @ 67th "
"- New York NY  (W)\"],[\"45th & Broadway - New York NY  (W)\"],[\"Marriott Marquis"
" - Lobby - New York NY\"],[\"Second @ 81st - New York NY  (W)\"],[\"52nd & Seventh"
" - New York NY  (W)\"]]]]"
msgstr ""

msgid "Of course you can specify conditions via the `query` option:"
msgstr "もちろん、`query` オプションを使って検索条件を指定する事もできます:"

msgid ""
"    # curl \"${endpoint}/d/select?table=Store&query=Columbus&match_columns=name"
"&output_columns=name&limit=10\"\n"
"    [[0,1398670157.661574,0.0012705326080322266],[[[2],[[\"_key\",\"ShortText\"]],"
"[\"Columbus @ 67th - New York NY  (W)\"],[\"2 Columbus Ave. - New York NY  (W)\"]]"
"]]\n"
"    # curl \"${endpoint}/d/select?table=Store&filter=name@'Ave'&output_columns="
"name&limit=10\"\n"
"    [[0,1398670586.193325,0.0003848075866699219],[[[3],[[\"_key\",\"ShortText\"]],"
"[\"2nd Ave. & 9th Street - New York NY\"],[\"84th & Third Ave - New York NY  (W)\""
"],[\"2 Columbus Ave. - New York NY  (W)\"]]]]"
msgstr ""

msgid "## Conclusion"
msgstr "## まとめ"

msgid ""
"In this tutorial, you did set up a [Droonga][] cluster on [Ubuntu Linux][Ubunt"
"u] computers.\n"
"Moreover, you load data to it and select data from it successfully, as a [Groo"
"nga][] compatible server."
msgstr ""
"このチュートリアルでは、[Ubuntu Linux][Ubuntu]のコンピュータを使って[Droonga][]クラスタを構築しました。\n"
"また、[Groonga][]サーバ互換のシステムとしてデータを読み込ませたり取り出したりすることにも成功しました。"

msgid ""
"Currently, Droonga supports only some limited features of Groonga compatible c"
"ommands.\n"
"See the [command reference][] for more details."
msgstr ""
"現在の所、DroongaはGroonga互換のコマンドのうちいくつかの限定的な機能にのみ対応しています。\n"
"詳細は[コマンドリファレンス][command reference]を参照して下さい。"

msgid ""
"Next, let's learn [how to backup and restore contents of a Droonga cluster](.."
"/dump-restore/)."
msgstr "続いて、[Droongaクラスタのデータをバックアップしたり復元したりする手順](../dump-restore/)を学びましょう。"

msgid ""
"  [Ubuntu]: http://www.ubuntu.com/\n"
"  [Droonga]: https://droonga.org/\n"
"  [Groonga]: http://groonga.org/\n"
"  [command reference]: ../../reference/commands/"
msgstr ""
