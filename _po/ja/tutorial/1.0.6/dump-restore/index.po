msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2015-11-16 16:04+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Droonga tutorial: How to backup and restore the database?\"\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: \"Droongaチュートリアル: データベースのバックアップと復元\"\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## The goal of this tutorial"
msgstr "## チュートリアルのゴール"

msgid "Learning steps to backup and restore data by your hand."
msgstr "データのバックアップと復元を手動で行う際の手順を学ぶこと。"

msgid "## Precondition"
msgstr "## 前提条件"

msgid ""
"* You must have an existing [Droonga][] cluster with some data.\n"
"  Please complete the [\"getting started\" tutorial](../groonga/) before this."
msgstr ""
"* 何らかのデータが格納されている状態の[Droonga][]クラスタがあること。\n"
"  このチュートリアルを始める前に、[「使ってみる」のチュートリアル](../groonga/)を完了しておいて下さい。"

msgid ""
"This tutorial assumes that there are two existing Droonga nodes prepared by th"
"e [previous tutorial](../groonga/): `node0` (`192.168.100.50`) and `node1` (`1"
"92.168.100.51`), and there is another computer `node2` (`192.168.100.52`) as a"
" working environment.\n"
"If you have Droonga nodes with other names, read `node0`, `node1` and `node2` "
"in following descriptions as yours."
msgstr ""
"このチュートリアルでは、[1つ前のチュートリアル](../groonga/)で準備した2つの既存のDroongaノード：`node0` (`192.168."
"100.50`) 、 `node1` (`192.168.100.51`) と、作業環境として使うもう1台のコンピュータ `node2` (`192.168"
".100.52`) があると仮定します。\n"
"あなたの手元にあるDroongaノードがこれとは異なる名前である場合には、以下の説明の中の`node0`、`node1`、`node2`は実際の物に読み替え"
"て下さい。"

msgid "## Backup data in a Droonga cluster"
msgstr "## Droongaクラスタのデータをバックアップする"

msgid "### Install `drndump`"
msgstr "### `drndump` のインストール"

msgid "First, install a command line tool named `drndump` via rubygems:"
msgstr "最初に、Rubygems経由で `drndump` と名付けられたコマンドラインツールをインストールします:"

msgid ""
"~~~\n"
"# gem install drndump\n"
"~~~"
msgstr ""

msgid ""
"After that, establish that the `drndump` command has been installed successful"
"ly:"
msgstr "その後、`drndump` コマンドが正しくインストールできたかどうかを確認します:"

msgid ""
"~~~\n"
"$ drndump --version\n"
"drndump 1.0.0\n"
"~~~"
msgstr ""

msgid "### Dump all data in a Droonga cluster"
msgstr "### Droongaクラスタ内のデータをダンプする"

msgid ""
"The `drndump` command extracts all schema and data as JSONs.\n"
"Let's dump contents of existing your Droonga cluster."
msgstr ""
"`drndump` コマンドはすべてのスキ−マ定義とデータをJSONs形式で取り出します。既存のDroongaクラスタのすべての内容をダンプ出力してみましょ"
"う。"

msgid ""
"For example, if your cluster is constructed from two nodes `node0` (`192.168.1"
"00.50`) and `node1` (`192.168.100.51`), and now you are logged in to new anoth"
"er computer `node2` (`192.168.100.52`). then the command line is:"
msgstr ""
"例えば、クラスタが `node0` (`192.168.100.50`) と `node1` (`192.168.100.51`) の2つのノードから構成さ"
"れていて、別のホスト `node2` (`192.168.100.52`) にログインしている場合、コマンドラインは以下の要領です。"

msgid ""
"~~~\n"
"# drndump --host=node0 \\\n"
"           --receiver-host=node2\n"
"{\n"
"  \"type\": \"table_create\",\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"name\": \"Location\",\n"
"    \"flags\": \"TABLE_PAT_KEY\",\n"
"    \"key_type\": \"WGS84GeoPoint\"\n"
"  }\n"
"}\n"
"...\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"store9\",\n"
"    \"values\": {\n"
"      \"location\": \"146702531x-266363233\",\n"
"      \"name\": \"Macy's 6th Floor - Herald Square - New York NY  (W)\"\n"
"    }\n"
"  },\n"
"  \"type\": \"add\"\n"
"}\n"
"{\n"
"  \"type\": \"column_create\",\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"table\": \"Location\",\n"
"    \"name\": \"store\",\n"
"    \"type\": \"Store\",\n"
"    \"flags\": \"COLUMN_INDEX\",\n"
"    \"source\": \"location\"\n"
"  }\n"
"}\n"
"{\n"
"  \"type\": \"column_create\",\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"table\": \"Term\",\n"
"    \"name\": \"store_name\",\n"
"    \"type\": \"Store\",\n"
"    \"flags\": \"COLUMN_INDEX|WITH_POSITION\",\n"
"    \"source\": \"name\"\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid "Note to these things:"
msgstr "以下の点に注意して下さい:"

msgid ""
" * You must specify valid host name of one of nodes in the cluster, via the op"
"tion `--host`.\n"
" * You must specify valid host name or IP address of the computer you are logg"
"ed in, via the option `--receiver-host`.\n"
"   It is used by the Droonga cluster, to send response messages.\n"
" * The result includes complete commands to construct a dataset, same to the s"
"ource."
msgstr ""
" * `--host` オプションには、クラスタ内のいずれかのノードの正しいホスト名またはIPアドレスを指定します。\n"
" * `--receiver-host` オプションには、今操作しているコンピュータ自身の正しいホスト名またはIPアドレスを指定します。\n"
"   この情報は、Droongaクラスタがメッセージを送り返すために使われます。\n"
" * コマンドの実行結果は、ダンプ出力元と同じ内容のデータセットを構築するのに必要なすべての情報を含んでいます。"

msgid ""
"The result is printed to the standard output.\n"
"To save it as a JSONs file, you'll use a redirection like:"
msgstr ""
"実行結果は標準出力に出力されます。\n"
"結果をJSONs形式のファイルに保存する場合は、リダイレクトを使って以下のようにして下さい:"

msgid ""
"~~~\n"
"$ drndump --host=node0 \\\n"
"          --receiver-host=node2 \\\n"
"    > dump.jsons\n"
"~~~"
msgstr ""

msgid "## Restore data to a Droonga cluster"
msgstr "## Droongaクラスタのデータを復元する"

msgid "### Install `droonga-client`"
msgstr "### `droonga-client`のインストール"

msgid "The result of `drndump` command is a list of Droonga messages."
msgstr "`drndump` コマンドの実行結果は、Droonga用のメッセージの一覧です。"

msgid ""
"You need to use `droonga-send` command to send it to your Droogna cluster.\n"
"Install the command included in the package `droonga-client`, via rubygems:"
msgstr ""
"Droongaクラスタにそれらのメッセージを送信するには、`droonga-send` コマンドを使います。\n"
"このコマンドを含んでいるGemパッケージ `droonga-client` をインストールして下さい:"

msgid ""
"~~~\n"
"# gem install droonga-client\n"
"~~~"
msgstr ""

msgid ""
"After that, establish that the `droonga-send` command has been installed succe"
"ssfully:"
msgstr "`droonga-send` コマンドが正しくインストールされた事を確認しましょう:"

msgid ""
"~~~\n"
"$ droonga-send --version\n"
"droonga-send 0.1.9\n"
"~~~"
msgstr ""

msgid "### Prepare an empty Droonga cluster"
msgstr "### 空のDroongaクラスタを用意する"

msgid ""
"Assume that there is an empty Droonga cluster constructed from two nodes `node"
"0` (`192.168.100.50`) and `node1` (`192.168.100.51`), now you are logged in to"
" the host `node2` (`192.168.100.52`), and there is a dump file `dump.jsons`."
msgstr ""
"2つのノード `node0` (`192.168.100.50`) と `node1` (`192.168.100.51`) からなる空のクラスタがあり、今"
" `node2` (`192.168.100.52`) にログインして操作を行っていて、ダンプファイルが `dump.jsons` という名前で手元にあると"
"仮定します。"

msgid ""
"If you are reading this tutorial sequentially, you'll have an existing cluster"
" and the dump file.\n"
"Make it empty with these commands:"
msgstr "もし順番にこのチュートリアルを読み進めているのであれば、クラスタとダンプファイルが既に手元にあるはずです。以下の操作でクラスタを空にしましょう:"

msgid ""
"~~~\n"
"$ endpoint=\"http://node0:10041\"\n"
"$ curl \"$endpoint/d/table_remove?name=Location\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1406610703.2229023,\n"
"    0.0010793209075927734\n"
"  ],\n"
"  true\n"
"]\n"
"$ curl \"$endpoint/d/table_remove?name=Store\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1406610708.2757723,\n"
"    0.006396293640136719\n"
"  ],\n"
"  true\n"
"]\n"
"$ curl \"$endpoint/d/table_remove?name=Term\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1406610712.379644,\n"
"    6.723403930664062e-05\n"
"  ],\n"
"  true\n"
"]\n"
"~~~"
msgstr ""

msgid "After that the cluster becomes empty. Confirm it:"
msgstr "これでクラスタは空になりました。確かめてみましょう:"

msgid ""
"~~~\n"
"$ curl \"$endpoint/d/table_list?_=$(date +%s)\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1406610804.1535122,\n"
"    0.0002875328063964844\n"
"  ],\n"
"  [\n"
"    [\n"
"      [\n"
"        \"id\",\n"
"        \"UInt32\"\n"
"      ],\n"
"      [\n"
"        \"name\",\n"
"        \"ShortText\"\n"
"      ],\n"
"      [\n"
"        \"path\",\n"
"        \"ShortText\"\n"
"      ],\n"
"      [\n"
"        \"flags\",\n"
"        \"ShortText\"\n"
"      ],\n"
"      [\n"
"        \"domain\",\n"
"        \"ShortText\"\n"
"      ],\n"
"      [\n"
"        \"range\",\n"
"        \"ShortText\"\n"
"      ],\n"
"      [\n"
"        \"default_tokenizer\",\n"
"        \"ShortText\"\n"
"      ],\n"
"      [\n"
"        \"normalizer\",\n"
"        \"ShortText\"\n"
"      ]\n"
"    ]\n"
"  ]\n"
"]\n"
"$ curl \"$endpoint/d/select?table=Store&output_columns=name&limit=10&_=$(date +"
"%s)\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1401363465.610241,\n"
"    0\n"
"  ],\n"
"  [\n"
"    [\n"
"      [\n"
"        null\n"
"      ],\n"
"      []\n"
"    ]\n"
"  ]\n"
"]\n"
"~~~"
msgstr ""

msgid ""
"Note: you have to add an extra parameter `_=$(date +%s)` to bypass the respons"
"e cache.\n"
"If you forget to add it, you'll see unexpected cached result based on old conf"
"igurations."
msgstr ""
"注意: レスポンスキャッシュを無視するために、追加のパラメータとして `_=$(date +%s)` を加えていることに注意して下さい。\n"
"これを忘れると、古い設定に基づく異キャッシュされたレスポンス（期待に反した内容）を目にしてしまうことになるでしょう。"

msgid "### Restore data from a dump result, to an empty Droonga cluster"
msgstr "### ダンプ結果から空のDroongaクラスタへデータを復元する"

msgid ""
"Because the result of the `drndump` command includes complete information to c"
"onstruct a dataset same to the source, you can re-construct your cluster from "
"a dump file, even if the cluster is broken.\n"
"You just have to pour the contents of the dump file to an empty cluster, by th"
"e `droonga-send` command."
msgstr ""
"`drndump` の実行結果はダンプ出力元と同じ内容のデータセットを作るために必要な情報をすべて含んでいます。そのため、クラスタが壊れた場合でも、ダンプフ"
"ァイルからクラスタを再構築する事ができます。\n"
"やり方は単純で、単にダンプファイルを `droonga-send` コマンドを使ってからのクラスタに流し込むだけです。"

msgid "To restore the cluster from the dump file, run a command line like:"
msgstr "ダンプファイルからクラスタの内容を復元するには、以下のようなコマンドを実行します:"

msgid ""
"~~~\n"
"$ droonga-send --server=node0  \\\n"
"                    dump.jsons\n"
"~~~"
msgstr ""

msgid "Note:"
msgstr "注意:"

msgid ""
" * You must specify valid host name or IP address of one of nodes in the clust"
"er, via the option `--host`."
msgstr " * `--host` オプションには、クラスタ内のいずれかのノードの正しいホスト名またはIPアドレスを指定します。"

msgid "Then the data is completely restored. Confirm it:"
msgstr "これで、データが完全に復元されました。確かめてみましょう:"

msgid ""
"~~~\n"
"$ curl \"$endpoint/d/select?table=Store&output_columns=name&limit=10&_=$(date +"
"%s)\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1401363556.0294158,\n"
"    7.62939453125e-05\n"
"  ],\n"
"  [\n"
"    [\n"
"      [\n"
"        40\n"
"      ],\n"
"      [\n"
"        [\n"
"          \"name\",\n"
"          \"ShortText\"\n"
"        ]\n"
"      ],\n"
"      [\n"
"        \"1st Avenue & 75th St. - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"76th & Second - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Herald Square- Macy's - New York NY\"\n"
"      ],\n"
"      [\n"
"        \"Macy's 5th Floor - Herald Square - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"80th & York - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Columbus @ 67th - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"45th & Broadway - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Marriott Marquis - Lobby - New York NY\"\n"
"      ],\n"
"      [\n"
"        \"Second @ 81st - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"52nd & Seventh - New York NY  (W)\"\n"
"      ]\n"
"    ]\n"
"  ]\n"
"]\n"
"~~~"
msgstr ""

msgid ""
"Note that adding an extra unique parameter for each request, to bypass old res"
"posne caches."
msgstr "古いレスポンスキャッシュを無視するために、各リクエストに追加の一意なパラメータを加えていることに注意して下さい。"

msgid "## Duplicate an existing Droonga cluster to another empty cluster directly"
msgstr "## 既存のクラスタを別の空のクラスタに直接複製する"

msgid ""
"If you have multiple Droonga clusters, then you can duplicate one to another.\n"
"For this purpose, the package `droonga-engine` includes a utility command `dro"
"onga-engine-absorb-data`.\n"
"It copies all data from an existing cluster to another one directly, so it is "
"recommended if you don't need to save dump file locally."
msgstr ""
"複数のDroongaクラスタが存在する場合、片方のクラスタの内容をもう片方のクラスタに複製することができます。\n"
"`droonga-engine` パッケージは `droonga-engine-absorb-data` というユーティリティコマンドを含んでおり、これを使"
"うと、既存のクラスタから別のクラスタへ直接データをコピーする事ができます。ローカルにダンプファイルを保存する必要がない場合には、この方法がおすすめです。"

msgid "### Prepare multiple Droonga clusters"
msgstr "### 複数のDroongaクラスタを用意する"

msgid ""
"Assume that there are two clusters: the source has a node `node0` (`192.168.10"
"0.50`), and the destination has a node `node1' (`192.168.100.51`)."
msgstr ""
"ノード `node0` (`192.168.100.50`) を含む複製元クラスタと、ノード `node1' (`192.168.100.51`) を含む複"
"製先クラスタの2つのクラスタがあると仮定します。"

msgid ""
"If you are reading this tutorial sequentially, you'll have an existing cluster"
" with two nodes.\n"
"Construct two clusters by `droonga-engine-catalog-modify` and make one cluster"
" empty, with these commands:"
msgstr ""
"もし順番にこのチュートリアルを読み進めているのであれば、2つのノードを含むクラスタが手元にあるはずです。`droonga-engine-catalog-mo"
"dify` を使って2つのクラスタを作り、1つを空にしましょう。手順は以下の通りです:"

msgid ""
"~~~\n"
"(on node0)\n"
"# droonga-engine-catalog-modify --replica-hosts=node0\n"
"~~~"
msgstr ""

msgid ""
"~~~\n"
"(on node1)\n"
"# droonga-engine-catalog-modify --replica-hosts=node1\n"
"$ endpoint=\"http://node1:10041\"\n"
"$ curl \"$endpoint/d/table_remove?name=Location&_=$(date +%s)\"\n"
"$ curl \"$endpoint/d/table_remove?name=Store&_=$(date +%s)\"\n"
"$ curl \"$endpoint/d/table_remove?name=Term&_=$(date +%s)\"\n"
"~~~"
msgstr ""

msgid ""
"After that there are two clusters: one contains `node0` with data, another con"
"tains `node1` with no data. Confirm it:"
msgstr ""
"これで、ノード `node0` を含む複製元クラスタと、ノード `node1` を含む複製先の空のクラスタの、2つのクラスタができました。確かめてみましょう"
":"

msgid ""
"~~~\n"
"$ curl \"http://node0:10041/droonga/system/status?_=$(date +%s)\" | jq \".\"\n"
"{\n"
"  \"nodes\": {\n"
"    \"node0:10031/droonga\": {\n"
"      \"live\": true\n"
"    }\n"
"  }\n"
"}\n"
"$ curl \"http://node0:10041/d/select?table=Store&output_columns=name&limit=10&_"
"=$(date +%s)\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1401363556.0294158,\n"
"    7.62939453125e-05\n"
"  ],\n"
"  [\n"
"    [\n"
"      [\n"
"        40\n"
"      ],\n"
"      [\n"
"        [\n"
"          \"name\",\n"
"          \"ShortText\"\n"
"        ]\n"
"      ],\n"
"      [\n"
"        \"1st Avenue & 75th St. - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"76th & Second - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Herald Square- Macy's - New York NY\"\n"
"      ],\n"
"      [\n"
"        \"Macy's 5th Floor - Herald Square - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"80th & York - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Columbus @ 67th - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"45th & Broadway - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Marriott Marquis - Lobby - New York NY\"\n"
"      ],\n"
"      [\n"
"        \"Second @ 81st - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"52nd & Seventh - New York NY  (W)\"\n"
"      ]\n"
"    ]\n"
"  ]\n"
"]\n"
"$ curl \"http://node1:10041/droonga/system/status?_=$(date +%s)\" | jq \".\"\n"
"{\n"
"  \"nodes\": {\n"
"    \"node1:10031/droonga\": {\n"
"      \"live\": true\n"
"    }\n"
"  }\n"
"}\n"
"$ curl \"http://node1:10041/d/select?table=Store&output_columns=name&limit=10&_"
"=$(date +%s)\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1401363465.610241,\n"
"    0\n"
"  ],\n"
"  [\n"
"    [\n"
"      [\n"
"        null\n"
"      ],\n"
"      []\n"
"    ]\n"
"  ]\n"
"]\n"
"~~~"
msgstr ""

msgid "### Duplicate data between two Droonga clusters"
msgstr "### 2つのDroongaクラスタの間でデータを複製する"

msgid ""
"To copy data between two clusters, run the `droonga-engine-absorb-data` comman"
"d on a node, like:"
msgstr ""
"2つのクラスタの間でデータをコピーするには、いずれかのノード上で以下のように `droonga-engine-absorb-data` コマンドを実行します"
":"

msgid ""
"~~~\n"
"(on node0 or node1)\n"
"$ droonga-engine-absorb-data --source-host=node0 \\\n"
"                             --destination-host=node1\n"
"Start to absorb data from node0\n"
"                       to node1\n"
"  dataset = Default\n"
"  port    = 10031\n"
"  tag     = droonga"
msgstr ""

msgid ""
"Absorbing...\n"
"...\n"
"Done.\n"
"~~~"
msgstr ""

msgid ""
"After that contents of these two clusters are completely synchronized. Confirm"
" it:"
msgstr "以上の操作で、2つのクラスタの内容が完全に同期されました。確かめてみましょう:"

msgid ""
"~~~\n"
"$ curl \"http://node1:10041/d/select?table=Store&output_columns=name&limit=10&_"
"=$(date +%s)\" | jq \".\"\n"
"[\n"
"  [\n"
"    0,\n"
"    1401363556.0294158,\n"
"    7.62939453125e-05\n"
"  ],\n"
"  [\n"
"    [\n"
"      [\n"
"        40\n"
"      ],\n"
"      [\n"
"        [\n"
"          \"name\",\n"
"          \"ShortText\"\n"
"        ]\n"
"      ],\n"
"      [\n"
"        \"1st Avenue & 75th St. - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"76th & Second - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Herald Square- Macy's - New York NY\"\n"
"      ],\n"
"      [\n"
"        \"Macy's 5th Floor - Herald Square - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"80th & York - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Columbus @ 67th - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"45th & Broadway - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"Marriott Marquis - Lobby - New York NY\"\n"
"      ],\n"
"      [\n"
"        \"Second @ 81st - New York NY  (W)\"\n"
"      ],\n"
"      [\n"
"        \"52nd & Seventh - New York NY  (W)\"\n"
"      ]\n"
"    ]\n"
"  ]\n"
"]\n"
"~~~"
msgstr ""

msgid "### Unite two Droonga clusters"
msgstr "### 2つのDroongaクラスタを結合する"

msgid "Run following command lines to unite these two clusters:"
msgstr "これらの2つのクラスタを結合するために、以下のコマンド列を実行しましょう:"

msgid ""
"~~~\n"
"(on node0)\n"
"# droonga-engine-catalog-modify --add-replica-hosts=node1\n"
"~~~"
msgstr ""

msgid ""
"~~~\n"
"(on node1)\n"
"# droonga-engine-catalog-modify --add-replica-hosts=node0\n"
"~~~"
msgstr ""

msgid "After that there is just one cluster - yes, it's the initial state."
msgstr "これで、1つだけクラスタがある状態になりました。最初の状態に戻ったという事になります。"

msgid ""
"~~~\n"
"$ curl \"http://node0:10041/droonga/system/status?_=$(date +%s)\" | jq \".\"\n"
"{\n"
"  \"nodes\": {\n"
"    \"node0:10031/droonga\": {\n"
"      \"live\": true\n"
"    },\n"
"    \"node1:10031/droonga\": {\n"
"      \"live\": true\n"
"    }\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid "## Conclusion"
msgstr "## まとめ"

msgid ""
"In this tutorial, you did backup a [Droonga][] cluster and restore the data.\n"
"Moreover, you did duplicate contents of an existing Droogna cluster to another"
" empty cluster."
msgstr ""
"このチュートリアルでは、[Droonga][]クラスタのバックアップとデータの復元の方法を実践しました。\n"
"また、既存のDroongaクラスタの内容を別の空のクラスタへ複製する方法も実践しました。"

msgid ""
"Next, let's learn [how to add a new replica to an existing Droonga cluster](.."
"/add-replica/)."
msgstr "続いて、[既存のDroongaクラスタに新しいreplicaを追加する手順](../add-replica/)を学びましょう。"

msgid ""
"  [Ubuntu]: http://www.ubuntu.com/\n"
"  [Droonga]: https://droonga.org/\n"
"  [Groonga]: http://groonga.org/\n"
"  [command reference]: ../../reference/commands/"
msgstr ""
